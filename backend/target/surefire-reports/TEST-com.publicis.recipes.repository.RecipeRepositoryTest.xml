<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.publicis.recipes.repository.RecipeRepositoryTest" time="11.109" tests="11" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="17"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="C:\Users\BoiriGourav-LFI\Downloads\publicis\backend\target\test-classes;C:\Users\BoiriGourav-LFI\Downloads\publicis\backend\target\classes;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.2.0\spring-boot-starter-web-3.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\boot\spring-boot-starter\3.2.0\spring-boot-starter-3.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\boot\spring-boot\3.2.0\spring-boot-3.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.2.0\spring-boot-autoconfigure-3.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.2.0\spring-boot-starter-logging-3.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\ch\qos\logback\logback-classic\1.4.11\logback-classic-1.4.11.jar;C:\Users\BoiriGourav-LFI\.m2\repository\ch\qos\logback\logback-core\1.4.11\logback-core-1.4.11.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.21.1\log4j-to-slf4j-2.21.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\slf4j\jul-to-slf4j\2.0.9\jul-to-slf4j-2.0.9.jar;C:\Users\BoiriGourav-LFI\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.2.0\spring-boot-starter-json-3.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.15.3\jackson-datatype-jdk8-2.15.3.jar;C:\Users\BoiriGourav-LFI\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.15.3\jackson-datatype-jsr310-2.15.3.jar;C:\Users\BoiriGourav-LFI\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.15.3\jackson-module-parameter-names-2.15.3.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.2.0\spring-boot-starter-tomcat-3.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.16\tomcat-embed-core-10.1.16.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.16\tomcat-embed-websocket-10.1.16.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\spring-web\6.1.1\spring-web-6.1.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\spring-beans\6.1.1\spring-beans-6.1.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\spring-webmvc\6.1.1\spring-webmvc-6.1.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\spring-aop\6.1.1\spring-aop-6.1.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\spring-context\6.1.1\spring-context-6.1.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\spring-expression\6.1.1\spring-expression-6.1.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.2.0\spring-boot-starter-data-jpa-3.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.2.0\spring-boot-starter-aop-3.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.2.0\spring-boot-starter-jdbc-3.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\spring-jdbc\6.1.1\spring-jdbc-6.1.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\hibernate\orm\hibernate-core\6.3.1.Final\hibernate-core-6.3.1.Final.jar;C:\Users\BoiriGourav-LFI\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\BoiriGourav-LFI\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\BoiriGourav-LFI\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\net\bytebuddy\byte-buddy\1.14.10\byte-buddy-1.14.10.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\BoiriGourav-LFI\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\BoiriGourav-LFI\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\data\spring-data-jpa\3.2.0\spring-data-jpa-3.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\data\spring-data-commons\3.2.0\spring-data-commons-3.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\spring-orm\6.1.1\spring-orm-6.1.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\spring-tx\6.1.1\spring-tx-6.1.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\slf4j\slf4j-api\2.0.9\slf4j-api-2.0.9.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.2.0\spring-boot-starter-validation-3.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.16\tomcat-embed-el-10.1.16.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.1.Final\hibernate-validator-8.0.1.Final.jar;C:\Users\BoiriGourav-LFI\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.2.0\spring-boot-starter-actuator-3.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.2.0\spring-boot-actuator-autoconfigure-3.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\boot\spring-boot-actuator\3.2.0\spring-boot-actuator-3.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\io\micrometer\micrometer-observation\1.12.0\micrometer-observation-1.12.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\io\micrometer\micrometer-commons\1.12.0\micrometer-commons-1.12.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\io\micrometer\micrometer-jakarta9\1.12.0\micrometer-jakarta9-1.12.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\io\micrometer\micrometer-core\1.12.0\micrometer-core-1.12.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\hdrhistogram\HdrHistogram\2.1.12\HdrHistogram-2.1.12.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\BoiriGourav-LFI\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.2.0\springdoc-openapi-starter-webmvc-ui-2.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.2.0\springdoc-openapi-starter-webmvc-api-2.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.2.0\springdoc-openapi-starter-common-2.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.15\swagger-core-jakarta-2.2.15.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.15\swagger-annotations-jakarta-2.2.15.jar;C:\Users\BoiriGourav-LFI\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.15\swagger-models-jakarta-2.2.15.jar;C:\Users\BoiriGourav-LFI\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.15.3\jackson-dataformat-yaml-2.15.3.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\webjars\swagger-ui\5.2.0\swagger-ui-5.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\retry\spring-retry\2.0.4\spring-retry-2.0.4.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\spring-aspects\6.1.1\spring-aspects-6.1.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\aspectj\aspectjweaver\1.9.20.1\aspectjweaver-1.9.20.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.3\jackson-databind-2.15.3.jar;C:\Users\BoiriGourav-LFI\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.3\jackson-annotations-2.15.3.jar;C:\Users\BoiriGourav-LFI\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.3\jackson-core-2.15.3.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.2.0\spring-boot-starter-test-3.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\boot\spring-boot-test\3.2.0\spring-boot-test-3.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.2.0\spring-boot-test-autoconfigure-3.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\com\jayway\jsonpath\json-path\2.8.0\json-path-2.8.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\BoiriGourav-LFI\.m2\repository\net\minidev\json-smart\2.5.0\json-smart-2.5.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\net\minidev\accessors-smart\2.5.0\accessors-smart-2.5.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\awaitility\awaitility\4.2.0\awaitility-4.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.1\junit-jupiter-5.10.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.1\junit-jupiter-api-5.10.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\junit\platform\junit-platform-commons\1.10.1\junit-platform-commons-1.10.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.1\junit-jupiter-params-5.10.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.1\junit-jupiter-engine-5.10.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\junit\platform\junit-platform-engine\1.10.1\junit-platform-engine-1.10.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.10\byte-buddy-agent-1.14.10.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\mockito\mockito-junit-jupiter\5.7.0\mockito-junit-jupiter-5.7.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\spring-core\6.1.1\spring-core-6.1.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\spring-jcl\6.1.1\spring-jcl-6.1.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\spring-test\6.1.1\spring-test-6.1.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\testcontainers\junit-jupiter\1.19.3\junit-jupiter-1.19.3.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\testcontainers\testcontainers\1.19.3\testcontainers-1.19.3.jar;C:\Users\BoiriGourav-LFI\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\apache\commons\commons-compress\1.24.0\commons-compress-1.24.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\rnorth\duct-tape\duct-tape\1.0.8\duct-tape-1.0.8.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\jetbrains\annotations\17.0.0\annotations-17.0.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\com\github\docker-java\docker-java-api\3.3.4\docker-java-api-3.3.4.jar;C:\Users\BoiriGourav-LFI\.m2\repository\com\github\docker-java\docker-java-transport-zerodep\3.3.4\docker-java-transport-zerodep-3.3.4.jar;C:\Users\BoiriGourav-LFI\.m2\repository\com\github\docker-java\docker-java-transport\3.3.4\docker-java-transport-3.3.4.jar;C:\Users\BoiriGourav-LFI\.m2\repository\net\java\dev\jna\jna\5.13.0\jna-5.13.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\testcontainers\jdbc\1.19.3\jdbc-1.19.3.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\testcontainers\database-commons\1.19.3\database-commons-1.19.3.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="Asia/Calcutta"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Windows 11"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="IN"/>
    <property name="sun.boot.library.path" value="C:\Users\BoiriGourav-LFI\Downloads\jdk-17.0.12_windows-x64_bin\jdk-17.0.12\bin"/>
    <property name="sun.java.command" value="C:\Users\BoiriGourav-LFI\AppData\Local\Temp\surefire18392544929810023324\surefirebooter-20250817212640681_3.jar C:\Users\BoiriGourav-LFI\AppData\Local\Temp\surefire18392544929810023324 2025-08-17T21-26-40_143-jvmRun1 surefire-20250817212640681_1tmp surefire_0-20250817212640681_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="C:\Users\BoiriGourav-LFI\Downloads\publicis\backend\target\test-classes;C:\Users\BoiriGourav-LFI\Downloads\publicis\backend\target\classes;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.2.0\spring-boot-starter-web-3.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\boot\spring-boot-starter\3.2.0\spring-boot-starter-3.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\boot\spring-boot\3.2.0\spring-boot-3.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.2.0\spring-boot-autoconfigure-3.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.2.0\spring-boot-starter-logging-3.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\ch\qos\logback\logback-classic\1.4.11\logback-classic-1.4.11.jar;C:\Users\BoiriGourav-LFI\.m2\repository\ch\qos\logback\logback-core\1.4.11\logback-core-1.4.11.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.21.1\log4j-to-slf4j-2.21.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\slf4j\jul-to-slf4j\2.0.9\jul-to-slf4j-2.0.9.jar;C:\Users\BoiriGourav-LFI\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.2.0\spring-boot-starter-json-3.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.15.3\jackson-datatype-jdk8-2.15.3.jar;C:\Users\BoiriGourav-LFI\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.15.3\jackson-datatype-jsr310-2.15.3.jar;C:\Users\BoiriGourav-LFI\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.15.3\jackson-module-parameter-names-2.15.3.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.2.0\spring-boot-starter-tomcat-3.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.16\tomcat-embed-core-10.1.16.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.16\tomcat-embed-websocket-10.1.16.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\spring-web\6.1.1\spring-web-6.1.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\spring-beans\6.1.1\spring-beans-6.1.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\spring-webmvc\6.1.1\spring-webmvc-6.1.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\spring-aop\6.1.1\spring-aop-6.1.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\spring-context\6.1.1\spring-context-6.1.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\spring-expression\6.1.1\spring-expression-6.1.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.2.0\spring-boot-starter-data-jpa-3.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.2.0\spring-boot-starter-aop-3.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.2.0\spring-boot-starter-jdbc-3.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\spring-jdbc\6.1.1\spring-jdbc-6.1.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\hibernate\orm\hibernate-core\6.3.1.Final\hibernate-core-6.3.1.Final.jar;C:\Users\BoiriGourav-LFI\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\BoiriGourav-LFI\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\BoiriGourav-LFI\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\net\bytebuddy\byte-buddy\1.14.10\byte-buddy-1.14.10.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\BoiriGourav-LFI\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\BoiriGourav-LFI\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\data\spring-data-jpa\3.2.0\spring-data-jpa-3.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\data\spring-data-commons\3.2.0\spring-data-commons-3.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\spring-orm\6.1.1\spring-orm-6.1.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\spring-tx\6.1.1\spring-tx-6.1.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\slf4j\slf4j-api\2.0.9\slf4j-api-2.0.9.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.2.0\spring-boot-starter-validation-3.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.16\tomcat-embed-el-10.1.16.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.1.Final\hibernate-validator-8.0.1.Final.jar;C:\Users\BoiriGourav-LFI\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.2.0\spring-boot-starter-actuator-3.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.2.0\spring-boot-actuator-autoconfigure-3.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\boot\spring-boot-actuator\3.2.0\spring-boot-actuator-3.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\io\micrometer\micrometer-observation\1.12.0\micrometer-observation-1.12.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\io\micrometer\micrometer-commons\1.12.0\micrometer-commons-1.12.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\io\micrometer\micrometer-jakarta9\1.12.0\micrometer-jakarta9-1.12.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\io\micrometer\micrometer-core\1.12.0\micrometer-core-1.12.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\hdrhistogram\HdrHistogram\2.1.12\HdrHistogram-2.1.12.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\BoiriGourav-LFI\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.2.0\springdoc-openapi-starter-webmvc-ui-2.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.2.0\springdoc-openapi-starter-webmvc-api-2.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.2.0\springdoc-openapi-starter-common-2.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.15\swagger-core-jakarta-2.2.15.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.15\swagger-annotations-jakarta-2.2.15.jar;C:\Users\BoiriGourav-LFI\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.15\swagger-models-jakarta-2.2.15.jar;C:\Users\BoiriGourav-LFI\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.15.3\jackson-dataformat-yaml-2.15.3.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\webjars\swagger-ui\5.2.0\swagger-ui-5.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\retry\spring-retry\2.0.4\spring-retry-2.0.4.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\spring-aspects\6.1.1\spring-aspects-6.1.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\aspectj\aspectjweaver\1.9.20.1\aspectjweaver-1.9.20.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.3\jackson-databind-2.15.3.jar;C:\Users\BoiriGourav-LFI\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.3\jackson-annotations-2.15.3.jar;C:\Users\BoiriGourav-LFI\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.3\jackson-core-2.15.3.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.2.0\spring-boot-starter-test-3.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\boot\spring-boot-test\3.2.0\spring-boot-test-3.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.2.0\spring-boot-test-autoconfigure-3.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\com\jayway\jsonpath\json-path\2.8.0\json-path-2.8.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\BoiriGourav-LFI\.m2\repository\net\minidev\json-smart\2.5.0\json-smart-2.5.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\net\minidev\accessors-smart\2.5.0\accessors-smart-2.5.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\awaitility\awaitility\4.2.0\awaitility-4.2.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.1\junit-jupiter-5.10.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.1\junit-jupiter-api-5.10.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\junit\platform\junit-platform-commons\1.10.1\junit-platform-commons-1.10.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.1\junit-jupiter-params-5.10.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.1\junit-jupiter-engine-5.10.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\junit\platform\junit-platform-engine\1.10.1\junit-platform-engine-1.10.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.10\byte-buddy-agent-1.14.10.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\mockito\mockito-junit-jupiter\5.7.0\mockito-junit-jupiter-5.7.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\spring-core\6.1.1\spring-core-6.1.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\spring-jcl\6.1.1\spring-jcl-6.1.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\springframework\spring-test\6.1.1\spring-test-6.1.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\testcontainers\junit-jupiter\1.19.3\junit-jupiter-1.19.3.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\testcontainers\testcontainers\1.19.3\testcontainers-1.19.3.jar;C:\Users\BoiriGourav-LFI\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\apache\commons\commons-compress\1.24.0\commons-compress-1.24.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\rnorth\duct-tape\duct-tape\1.0.8\duct-tape-1.0.8.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\jetbrains\annotations\17.0.0\annotations-17.0.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\com\github\docker-java\docker-java-api\3.3.4\docker-java-api-3.3.4.jar;C:\Users\BoiriGourav-LFI\.m2\repository\com\github\docker-java\docker-java-transport-zerodep\3.3.4\docker-java-transport-zerodep-3.3.4.jar;C:\Users\BoiriGourav-LFI\.m2\repository\com\github\docker-java\docker-java-transport\3.3.4\docker-java-transport-3.3.4.jar;C:\Users\BoiriGourav-LFI\.m2\repository\net\java\dev\jna\jna\5.13.0\jna-5.13.0.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\testcontainers\jdbc\1.19.3\jdbc-1.19.3.jar;C:\Users\BoiriGourav-LFI\.m2\repository\org\testcontainers\database-commons\1.19.3\database-commons-1.19.3.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\BoiriGourav-LFI"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2024-07-16"/>
    <property name="java.home" value="C:\Users\BoiriGourav-LFI\Downloads\jdk-17.0.12_windows-x64_bin\jdk-17.0.12"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="C:\Users\BoiriGourav-LFI\Downloads\publicis\backend"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="windows-1252"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="C:\Users\BoiriGourav-LFI\AppData\Local\Temp\surefire18392544929810023324\surefirebooter-20250817212640681_3.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="17.0.12+8-LTS-286"/>
    <property name="user.name" value="BoiriGourav-LFI"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="Cp1252"/>
    <property name="FILE_LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{correlationId}] %logger{36} - %msg%n"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="LOG_FILE" value="logs/recipe-management.log"/>
    <property name="localRepository" value="C:\Users\BoiriGourav-LFI\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\BOIRIG~1\AppData\Local\Temp\"/>
    <property name="java.version" value="17.0.12"/>
    <property name="user.dir" value="C:\Users\BoiriGourav-LFI\Downloads\publicis\backend"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="11596"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="CONSOLE_LOG_CHARSET" value="windows-1252"/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Users\BoiriGourav-LFI\Downloads\jdk-17.0.12_windows-x64_bin\jdk-17.0.12\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;c:\Users\BoiriGourav-LFI\AppData\Local\Programs\cursor\resources\app\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Users\BoiriGourav-LFI\AppData\Local\Microsoft\WindowsApps;C:\Users\BoiriGourav-LFI\AppData\Roaming\npm;%NVM_HOME%;%NVM_SYMLINK%;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\Git\cmd;C:\Users\BoiriGourav-LFI\AppData\Local\Programs\Python\Python312\Scripts\;C:\Users\BoiriGourav-LFI\AppData\Local\Programs\Python\Python312\;C:\Users\BoiriGourav-LFI\AppData\Local\Programs\Python\Python313\Scripts\;C:\Users\BoiriGourav-LFI\AppData\Local\Programs\Python\Python313\;C:\Users\BoiriGourav-LFI\AppData\Local\Programs\Python\Launcher\;C:\Users\BoiriGourav-LFI\AppData\Local\Microsoft\WindowsApps;C:\Users\BoiriGourav-LFI\AppData\Roaming\npm;C:\Users\BoiriGourav-LFI\AppData\Local\GitHubDesktop\bin;C:\Users\BoiriGourav-LFI\AppData\Roaming\nvm;C:\Program Files\nodejs;C:\Program Files\JetBrains\PyCharm 2024.3.3\bin;;C:\Users\BoiriGourav-LFI\AppData\Local\Programs\cursor\resources\app\bin;C:\Users\BoiriGourav-LFI\Downloads\jdk-17.0.12_windows-x64_bin\jdk-17.0.12\bin;;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="17.0.12+8-LTS-286"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="61.0"/>
    <property name="CONSOLE_LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{correlationId}] %logger{36} - %msg%n"/>
    <property name="LOGGED_APPLICATION_NAME" value="[recipe-management-system] "/>
  </properties>
  <testcase name="findById_NonExistingId_ReturnsEmpty" classname="com.publicis.recipes.repository.RecipeRepositoryTest" time="0.397">
    <system-out><![CDATA[21:26:46.556 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.publicis.recipes.repository.RecipeRepositoryTest]: RecipeRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
21:26:46.960 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.publicis.recipes.RecipeApplication for test class com.publicis.recipes.repository.RecipeRepositoryTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.0)

2025-08-17 21:26:48 [main] INFO  [] c.p.r.r.RecipeRepositoryTest - Starting RecipeRepositoryTest using Java 17.0.12 with PID 11596 (started by BoiriGourav-LFI in C:\Users\BoiriGourav-LFI\Downloads\publicis\backend)
2025-08-17 21:26:48 [main] DEBUG [] c.p.r.r.RecipeRepositoryTest - Running with Spring Boot v3.2.0, Spring v6.1.1
2025-08-17 21:26:48 [main] INFO  [] c.p.r.r.RecipeRepositoryTest - No active profile set, falling back to 1 default profile: "default"
2025-08-17 21:26:49 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-17 21:26:49 [main] INFO  [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 133 ms. Found 1 JPA repository interface.
2025-08-17 21:26:49 [main] INFO  [] o.s.b.t.a.j.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor - Replacing 'dataSource' DataSource bean with embedded version
2025-08-17 21:26:49 [main] INFO  [] o.s.j.d.e.EmbeddedDatabaseFactory - Starting embedded database: url='jdbc:h2:mem:767679d8-a821-456a-88ce-54bbfab1f5e8;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2025-08-17 21:26:50 [main] INFO  [] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-17 21:26:51 [main] INFO  [] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2025-08-17 21:26:51 [main] INFO  [] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-17 21:26:51 [main] INFO  [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-17 21:26:53 [main] INFO  [] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: 
    drop table if exists recipe_ingredients cascade 
Hibernate: 
    drop table if exists recipe_instructions cascade 
Hibernate: 
    drop table if exists recipe_tags cascade 
Hibernate: 
    drop table if exists recipes cascade 
Hibernate: 
    create table recipe_ingredients (
        recipe_id bigint not null,
        ingredient varchar(500)
    )
Hibernate: 
    create table recipe_instructions (
        step_order integer not null,
        recipe_id bigint not null,
        instruction varchar(1000),
        primary key (step_order, recipe_id)
    )
Hibernate: 
    create table recipe_tags (
        recipe_id bigint not null,
        tag varchar(50)
    )
Hibernate: 
    create table recipes (
        calories_per_serving integer,
        cook_time_minutes integer,
        prep_time_minutes integer,
        rating float(53),
        review_count integer,
        servings integer,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        difficulty varchar(50) not null,
        cuisine varchar(100) not null,
        image varchar(500),
        name varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create index idx_recipe_name 
       on recipes (name)
Hibernate: 
    create index idx_recipe_cuisine 
       on recipes (cuisine)
Hibernate: 
    create index idx_recipe_difficulty 
       on recipes (difficulty)
Hibernate: 
    create index idx_recipe_cook_time 
       on recipes (cook_time_minutes)
Hibernate: 
    alter table if exists recipe_ingredients 
       add constraint FKcqlw8sor5ut10xsuj3jnttkc 
       foreign key (recipe_id) 
       references recipes
Hibernate: 
    alter table if exists recipe_instructions 
       add constraint FK7v3emx3mfvngvbwd10x0hx9vg 
       foreign key (recipe_id) 
       references recipes
Hibernate: 
    alter table if exists recipe_tags 
       add constraint FKoqq73b50aa11i89asflll1rp5 
       foreign key (recipe_id) 
       references recipes
2025-08-17 21:26:53 [main] INFO  [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-17 21:26:54 [main] INFO  [] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-17 21:26:56 [main] INFO  [] c.p.r.r.RecipeRepositoryTest - Started RecipeRepositoryTest in 9.039 seconds (process running for 15.273)
Hibernate: 
    insert 
    into
        recipes
        (calories_per_serving, cook_time_minutes, created_at, cuisine, difficulty, image, name, prep_time_minutes, rating, review_count, servings, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipes
        (calories_per_serving, cook_time_minutes, created_at, cuisine, difficulty, image, name, prep_time_minutes, rating, review_count, servings, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipes
        (calories_per_serving, cook_time_minutes, created_at, cuisine, difficulty, image, name, prep_time_minutes, rating, review_count, servings, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    select
        r1_0.id,
        r1_0.calories_per_serving,
        r1_0.cook_time_minutes,
        r1_0.created_at,
        r1_0.cuisine,
        r1_0.difficulty,
        r1_0.image,
        i1_0.recipe_id,
        i1_0.step_order,
        i1_0.instruction,
        r1_0.name,
        r1_0.prep_time_minutes,
        r1_0.rating,
        r1_0.review_count,
        r1_0.servings,
        r1_0.updated_at 
    from
        recipes r1_0 
    left join
        recipe_instructions i1_0 
            on r1_0.id=i1_0.recipe_id 
    where
        r1_0.id=?
]]></system-out>
  </testcase>
  <testcase name="save_NewRecipe_PersistsSuccessfully" classname="com.publicis.recipes.repository.RecipeRepositoryTest" time="0.037">
    <system-out><![CDATA[Hibernate: 
    insert 
    into
        recipes
        (calories_per_serving, cook_time_minutes, created_at, cuisine, difficulty, image, name, prep_time_minutes, rating, review_count, servings, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipes
        (calories_per_serving, cook_time_minutes, created_at, cuisine, difficulty, image, name, prep_time_minutes, rating, review_count, servings, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipes
        (calories_per_serving, cook_time_minutes, created_at, cuisine, difficulty, image, name, prep_time_minutes, rating, review_count, servings, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipes
        (calories_per_serving, cook_time_minutes, created_at, cuisine, difficulty, image, name, prep_time_minutes, rating, review_count, servings, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
]]></system-out>
  </testcase>
  <testcase name="findByCuisineContainingIgnoreCase_WithNonExistingCuisine_ReturnsEmpty" classname="com.publicis.recipes.repository.RecipeRepositoryTest" time="0.158">
    <system-out><![CDATA[Hibernate: 
    insert 
    into
        recipes
        (calories_per_serving, cook_time_minutes, created_at, cuisine, difficulty, image, name, prep_time_minutes, rating, review_count, servings, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipes
        (calories_per_serving, cook_time_minutes, created_at, cuisine, difficulty, image, name, prep_time_minutes, rating, review_count, servings, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipes
        (calories_per_serving, cook_time_minutes, created_at, cuisine, difficulty, image, name, prep_time_minutes, rating, review_count, servings, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    select
        r1_0.id,
        r1_0.calories_per_serving,
        r1_0.cook_time_minutes,
        r1_0.created_at,
        r1_0.cuisine,
        r1_0.difficulty,
        r1_0.image,
        r1_0.name,
        r1_0.prep_time_minutes,
        r1_0.rating,
        r1_0.review_count,
        r1_0.servings,
        r1_0.updated_at 
    from
        recipes r1_0 
    where
        upper(r1_0.cuisine) like upper(?) escape '\' 
    offset
        ? rows 
    fetch
        first ? rows only
]]></system-out>
  </testcase>
  <testcase name="count_ReturnsCorrectCount" classname="com.publicis.recipes.repository.RecipeRepositoryTest" time="0.04">
    <system-out><![CDATA[Hibernate: 
    insert 
    into
        recipes
        (calories_per_serving, cook_time_minutes, created_at, cuisine, difficulty, image, name, prep_time_minutes, rating, review_count, servings, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipes
        (calories_per_serving, cook_time_minutes, created_at, cuisine, difficulty, image, name, prep_time_minutes, rating, review_count, servings, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipes
        (calories_per_serving, cook_time_minutes, created_at, cuisine, difficulty, image, name, prep_time_minutes, rating, review_count, servings, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    select
        count(*) 
    from
        recipes r1_0
]]></system-out>
  </testcase>
  <testcase name="findByCuisineContainingIgnoreCase_WithExistingCuisine_ReturnsRecipes" classname="com.publicis.recipes.repository.RecipeRepositoryTest" time="0.053">
    <system-out><![CDATA[Hibernate: 
    insert 
    into
        recipes
        (calories_per_serving, cook_time_minutes, created_at, cuisine, difficulty, image, name, prep_time_minutes, rating, review_count, servings, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipes
        (calories_per_serving, cook_time_minutes, created_at, cuisine, difficulty, image, name, prep_time_minutes, rating, review_count, servings, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipes
        (calories_per_serving, cook_time_minutes, created_at, cuisine, difficulty, image, name, prep_time_minutes, rating, review_count, servings, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    select
        r1_0.id,
        r1_0.calories_per_serving,
        r1_0.cook_time_minutes,
        r1_0.created_at,
        r1_0.cuisine,
        r1_0.difficulty,
        r1_0.image,
        r1_0.name,
        r1_0.prep_time_minutes,
        r1_0.rating,
        r1_0.review_count,
        r1_0.servings,
        r1_0.updated_at 
    from
        recipes r1_0 
    where
        upper(r1_0.cuisine) like upper(?) escape '\' 
    offset
        ? rows 
    fetch
        first ? rows only
]]></system-out>
  </testcase>
  <testcase name="findByDifficulty_ReturnsMatchingRecipes" classname="com.publicis.recipes.repository.RecipeRepositoryTest" time="0.038">
    <system-out><![CDATA[Hibernate: 
    insert 
    into
        recipes
        (calories_per_serving, cook_time_minutes, created_at, cuisine, difficulty, image, name, prep_time_minutes, rating, review_count, servings, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipes
        (calories_per_serving, cook_time_minutes, created_at, cuisine, difficulty, image, name, prep_time_minutes, rating, review_count, servings, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipes
        (calories_per_serving, cook_time_minutes, created_at, cuisine, difficulty, image, name, prep_time_minutes, rating, review_count, servings, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    select
        r1_0.id,
        r1_0.calories_per_serving,
        r1_0.cook_time_minutes,
        r1_0.created_at,
        r1_0.cuisine,
        r1_0.difficulty,
        r1_0.image,
        r1_0.name,
        r1_0.prep_time_minutes,
        r1_0.rating,
        r1_0.review_count,
        r1_0.servings,
        r1_0.updated_at 
    from
        recipes r1_0 
    where
        r1_0.difficulty=? 
    offset
        ? rows 
    fetch
        first ? rows only
]]></system-out>
  </testcase>
  <testcase name="findAll_WithPagination_ReturnsPagedResults" classname="com.publicis.recipes.repository.RecipeRepositoryTest" time="0.04">
    <system-out><![CDATA[Hibernate: 
    insert 
    into
        recipes
        (calories_per_serving, cook_time_minutes, created_at, cuisine, difficulty, image, name, prep_time_minutes, rating, review_count, servings, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipes
        (calories_per_serving, cook_time_minutes, created_at, cuisine, difficulty, image, name, prep_time_minutes, rating, review_count, servings, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipes
        (calories_per_serving, cook_time_minutes, created_at, cuisine, difficulty, image, name, prep_time_minutes, rating, review_count, servings, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    select
        r1_0.id,
        r1_0.calories_per_serving,
        r1_0.cook_time_minutes,
        r1_0.created_at,
        r1_0.cuisine,
        r1_0.difficulty,
        r1_0.image,
        r1_0.name,
        r1_0.prep_time_minutes,
        r1_0.rating,
        r1_0.review_count,
        r1_0.servings,
        r1_0.updated_at 
    from
        recipes r1_0 
    offset
        ? rows 
    fetch
        first ? rows only
Hibernate: 
    select
        count(r1_0.id) 
    from
        recipes r1_0
]]></system-out>
  </testcase>
  <testcase name="countRecipesByCuisine_ReturnsCorrectCounts" classname="com.publicis.recipes.repository.RecipeRepositoryTest" time="0.051">
    <system-out><![CDATA[Hibernate: 
    insert 
    into
        recipes
        (calories_per_serving, cook_time_minutes, created_at, cuisine, difficulty, image, name, prep_time_minutes, rating, review_count, servings, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipes
        (calories_per_serving, cook_time_minutes, created_at, cuisine, difficulty, image, name, prep_time_minutes, rating, review_count, servings, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipes
        (calories_per_serving, cook_time_minutes, created_at, cuisine, difficulty, image, name, prep_time_minutes, rating, review_count, servings, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    select
        r1_0.cuisine,
        count(r1_0.id) 
    from
        recipes r1_0 
    group by
        r1_0.cuisine 
    order by
        count(r1_0.id) desc
]]></system-out>
  </testcase>
  <testcase name="findById_ExistingId_ReturnsRecipe" classname="com.publicis.recipes.repository.RecipeRepositoryTest" time="0.028">
    <system-out><![CDATA[Hibernate: 
    insert 
    into
        recipes
        (calories_per_serving, cook_time_minutes, created_at, cuisine, difficulty, image, name, prep_time_minutes, rating, review_count, servings, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipes
        (calories_per_serving, cook_time_minutes, created_at, cuisine, difficulty, image, name, prep_time_minutes, rating, review_count, servings, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipes
        (calories_per_serving, cook_time_minutes, created_at, cuisine, difficulty, image, name, prep_time_minutes, rating, review_count, servings, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
]]></system-out>
  </testcase>
  <testcase name="countRecipesByDifficulty_ReturnsCorrectCounts" classname="com.publicis.recipes.repository.RecipeRepositoryTest" time="0.033">
    <system-out><![CDATA[Hibernate: 
    insert 
    into
        recipes
        (calories_per_serving, cook_time_minutes, created_at, cuisine, difficulty, image, name, prep_time_minutes, rating, review_count, servings, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipes
        (calories_per_serving, cook_time_minutes, created_at, cuisine, difficulty, image, name, prep_time_minutes, rating, review_count, servings, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipes
        (calories_per_serving, cook_time_minutes, created_at, cuisine, difficulty, image, name, prep_time_minutes, rating, review_count, servings, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    select
        r1_0.difficulty,
        count(r1_0.id) 
    from
        recipes r1_0 
    group by
        r1_0.difficulty 
    order by
        count(r1_0.id) desc
]]></system-out>
  </testcase>
  <testcase name="delete_ExistingRecipe_RemovesFromDatabase" classname="com.publicis.recipes.repository.RecipeRepositoryTest" time="0.058">
    <system-out><![CDATA[Hibernate: 
    insert 
    into
        recipes
        (calories_per_serving, cook_time_minutes, created_at, cuisine, difficulty, image, name, prep_time_minutes, rating, review_count, servings, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipes
        (calories_per_serving, cook_time_minutes, created_at, cuisine, difficulty, image, name, prep_time_minutes, rating, review_count, servings, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipes
        (calories_per_serving, cook_time_minutes, created_at, cuisine, difficulty, image, name, prep_time_minutes, rating, review_count, servings, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_ingredients
        (recipe_id, ingredient) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        recipe_instructions
        (recipe_id, step_order, instruction) 
    values
        (?, ?, ?)
Hibernate: 
    delete 
    from
        recipe_ingredients 
    where
        recipe_id=?
Hibernate: 
    delete 
    from
        recipe_instructions 
    where
        recipe_id=?
Hibernate: 
    delete 
    from
        recipes 
    where
        id=?
Hibernate: 
    select
        r1_0.id,
        r1_0.calories_per_serving,
        r1_0.cook_time_minutes,
        r1_0.created_at,
        r1_0.cuisine,
        r1_0.difficulty,
        r1_0.image,
        i1_0.recipe_id,
        i1_0.step_order,
        i1_0.instruction,
        r1_0.name,
        r1_0.prep_time_minutes,
        r1_0.rating,
        r1_0.review_count,
        r1_0.servings,
        r1_0.updated_at 
    from
        recipes r1_0 
    left join
        recipe_instructions i1_0 
            on r1_0.id=i1_0.recipe_id 
    where
        r1_0.id=?
Hibernate: 
    select
        count(*) 
    from
        recipes r1_0
]]></system-out>
  </testcase>
</testsuite>